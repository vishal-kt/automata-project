/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pc
 */
 import javax.swing.*;
 import javax.swing.JPanel.*;
 import java.awt.event.*;
 import java.awt.*;
 import java.applet.*;
public class retofa extends javax.swing.JPanel {

    
	DFA dfa=new DFA();
	DFA dfa1=new DFA();
	RE re = new RE();
	NFA nfa = new NFA();
	arrowfinding af= new arrowfinding();
    NEWDFA newdfa;
	nfapanel nf = new nfapanel();
	project pr = new project();
	 JFrame frm = new JFrame();
	 int flag1,tempfirst,tempsecond;
	 int statex[]=new int[50];
	 int statey[]=new int[50];
	 int first[]=new int[50];
	 int second[]=new int[50];
	 int same[]=new int[50];
	 String sig[]=new String[50];
	 int tag,i,j,t,nfaflag,dfaflag,dfaminflag,dfadisflag,nfadisflag,dfamindisflag;
	 int f1,g1,f2,g2,xmid,ymid;
	 String tempsig;
	 String enterreg;
    /**
     * Creates new form retofa
     */
    public retofa() {
        initComponents();
    statex[0]=33;statey[0]=19;
		statex[1]=157;statey[1]=109;
		statex[2]=290;statey[2]=43;
		statex[3]=12;statey[3]=213;
		statex[4]=309;statey[4]=276;
		statex[5]=137;statey[5]=342;
		statex[6]=597;statey[6]=508;
		statex[7]=290;statey[7]=463;
		statex[8]=589;statey[8]=150;
		statex[9]=953;statey[9]=413;
		statex[10]=774;statey[10]=317;
		statex[11]=885;statey[11]=553;
                statex[12]=691;statey[12]=7;
		statex[13]=924;statey[13]=135;    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
public void initComponents()
		{
			 bevpanel = new javax.swing.JPanel();
			 //edges = new javax.swing.JLabel();
			  //jd = new javax.swing.JDialog();
			//sigma = new javax.swing.JLabel();
			//add = new javax.swing.JButton();
			//enterstr = new javax.swing.JButton();
			//edgecombo = new javax.swing.JComboBox();
			//sigmacombo = new javax.swing.JComboBox();
			setBackground(new java.awt.Color(255, 255, 204));
			setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 0), 3));
			addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                //formMouseClicked(evt);
            }
			public void mousePressed(java.awt.event.MouseEvent evt) {
                //formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                //formMouseReleased(evt);
            }
			});
			  bevpanel.setBackground(new java.awt.Color(153, 255, 204));
			bevpanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

      /*  edges.setText("EDGES");

        sigma.setText("SIGMA");
		enterstr.setText("ENTERSTRING");
		 add.setText("ADD");
		 edgecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgecomboActionPerformed(evt);
            }
        });
		 sigmacombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigmacomboActionPerformed(evt);
            }
        });
		 add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
		 enterstr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterstrActionPerformed(evt);
            }
        });*/

        javax.swing.GroupLayout bevpanelLayout = new javax.swing.GroupLayout(bevpanel);
        bevpanel.setLayout(bevpanelLayout);
        bevpanelLayout.setHorizontalGroup(
            bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        bevpanelLayout.setVerticalGroup(
            bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bevpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(579, Short.MAX_VALUE)
                .addComponent(bevpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>


	public void nfadisplay()
			{
				nf.nfafromre(nfa);
		  //repaint();

			}
	void showdialog()
    	{
			 Object enterre;
		
			enterre=JOptionPane.showInputDialog(frm, "Please enter the REGULAR EXPRESSION", "ENTER R.E",JOptionPane.QUESTION_MESSAGE, null, null, null);
			enterreg=(String)enterre;
			if(enterreg!=null)
				 {
					nfaflag=1;dfaflag=1;dfaminflag=1;
					//System.out.println("expression is "+ enterreg);
					 nfa=re.retofa(enterreg);                       //REGULAR EXPRESSION TO DFA/NFA
					  pr.printnfa(nfa);
					 newdfa=nfa.nfatodfa();
					 dfa1=newdfa.normalize();
					  pr.printdfa(dfa1);
					// dfa=dfa1.minimize();
					 System.out.println("count states= "+ dfa1.count_states);
						System.out.println("count sigma= "+ dfa1.count_sigma);
					 System.out.println("count fstates= "+ dfa1.count_fstates);
					 //pr.printdfa(dfa);
					 //System.out.println("\n"+re.fatore(dfa));
					/*for(i=0;i<dfa.count_states;i++)
						{
							for(j=0;j<dfa.count_sigma;j++)
								{
								System.out.print("   "+dfa.tr_table[i][j]);
								}
							 System.out.println();
						}*/
					
				}

	    }

	  void dfadisplay()
		{
		  
			/*if(dfadisflag==1)
			 {
				af.statesinitial(dfa.count_states);
				//af.dfaprinting(dfa1);
			 }*/
			/* if(nfadisflag==1)
			 {
				af.statesinitial(nfa.count_states);
				nf.nfafromre(nfa);
				//af.dfaprinting(dfa1);
			 }*/
		  //repaint();
		}
			
		

		public void paint(Graphics g)
			{
				
				super.paint(g);
				if((af.flag1==1)&&(dfadisflag==1))
				{
						g.setColor(Color.red);
					   for(j=0;j<dfa1.count_states;j++)
						{
							g.fillOval(af.statex[j],af.statey[j],50,50);
							g.drawString("q"+j,af.statex[j]+23,af.statey[j]+60);
						}
						for (j=0;j<=af.kkk;j++)
						{
							if(af.same[j]==0)
							{
								g.setColor(Color.red);
								g.drawLine(af.linex1[j],af.liney1[j],af.linex2[j],af.liney2[j]);
								f1=af.arrowf1(af.linex1[j],af.liney1[j],af.linex2[j],af.liney2[j]);
								g1=af.arrowg1(af.linex1[j],af.liney1[j],af.linex2[j],af.liney2[j]);
								f2=af.arrowf2(af.linex1[j],af.liney1[j],af.linex2[j],af.liney2[j]);
								g2=af.arrowg2(af.linex1[j],af.liney1[j],af.linex2[j],af.liney2[j]);
					   			xmid=(af.linex1[j]+af.linex2[j])/2;
       							ymid=(af.liney1[j]+af.liney2[j])/2;
								g.setColor(Color.blue);
								g.drawLine(f1,g1,xmid,ymid);
    							g.drawLine(f2,g2,xmid,ymid);
							}
							else if(af.same[j]==1)
							{
								g.setColor(Color.red);
								g.drawArc(af.linex1[j],af.liney1[j]-25,50,70,0,180);
								
							}
						}

				}
			}
		  public javax.swing.JPanel bevpanel;
}
