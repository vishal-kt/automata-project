/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pc
 */
import javax.swing.*;
 import javax.swing.JPanel.*;
 import java.awt.event.*;
 import java.awt.*;
 import java.applet.*;
class grammerpanel extends javax.swing.JPanel {

    /**
     * Creates new form grammerpanel
     */
     GRAMMAR gr=new GRAMMAR();
		 GRAMMAR grnull=new GRAMMAR();
		 GRAMMAR grunit=new GRAMMAR();
		 GRAMMAR gruseless=new GRAMMAR();
		 String str[]=new String[50];
		 JFrame frm = new JFrame();
		 int count=0,k=15,index=0,i,j,result,ind=0,h;
		 char w[]=new char[50];
		 char w1;
		 int flag=0;//for different options in paint
		 String ed,vert,sigma;
    public grammerpanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
 public void initComponents(int i)
		{
			bevpanel = new javax.swing.JPanel();
			prodtext = new javax.swing.JTextField();
			prodlabel = new javax.swing.JLabel();
			addbutton = new javax.swing.JButton();
			 bevpanel = new javax.swing.JPanel();
			jLabel1 = new javax.swing.JLabel();
			combo = new javax.swing.JComboBox();
			jLabel2 = new javax.swing.JLabel();
			prodtext = new javax.swing.JTextField();
			jLabel3 = new javax.swing.JLabel();
			addbutton = new javax.swing.JButton();

			setBackground(new java.awt.Color(255, 255, 204));
			setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 0), 3));
			
			  bevpanel.setBackground(new java.awt.Color(153, 255, 204));
			bevpanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

     
		if(i==0)
			{
				javax.swing.GroupLayout bevpanelLayout = new javax.swing.GroupLayout(bevpanel);
				/*bevpanel.setLayout(bevpanelLayout);
				bevpanelLayout.setHorizontalGroup(
					bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGap(0, 818, Short.MAX_VALUE)
				);
				bevpanelLayout.setVerticalGroup(
					bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGap(0, 34, Short.MAX_VALUE)
				);
                    */
				javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
				this.setLayout(layout);
				layout.setHorizontalGroup(
					layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					//.addComponent(bevpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				);
				layout.setVerticalGroup(
					layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addContainerGap(579, Short.MAX_VALUE)
						//.addComponent(bevpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				));
				//repaint();
			}
			else if (i==1)
			  {
				     jLabel1.setText("ADD PRODUCTIONS");

					//combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
					 combo.addActionListener(new java.awt.event.ActionListener() {
					 public void actionPerformed(java.awt.event.ActionEvent evt) {
						 edgecomboActionPerformed(evt);
						}
					 });
					jLabel2.setText("SIGMA");

					jLabel3.setText("PRODUCTIONS");

					addbutton.setText("ADD");
					 addbutton.addActionListener(new java.awt.event.ActionListener() {
					 public void actionPerformed(java.awt.event.ActionEvent evt) {
						addbuttonActionPerformed(evt);
						}
						});
					 for (j=0;j<gr.count_vertex;j++)
					    {
							combo.addItem(j+".)"+gr.vertex[j]);
					    }

					javax.swing.GroupLayout bevpanelLayout = new javax.swing.GroupLayout(bevpanel);
					bevpanel.setLayout(bevpanelLayout);
					bevpanelLayout.setHorizontalGroup(
						bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(bevpanelLayout.createSequentialGroup()
							.addGroup(bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(bevpanelLayout.createSequentialGroup()
									.addGap(25, 25, 25)
									.addComponent(jLabel1)
									.addGap(72, 72, 72)
									.addComponent(jLabel2))
								.addGroup(bevpanelLayout.createSequentialGroup()
									.addGap(183, 183, 183)
									.addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
							.addGroup(bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(bevpanelLayout.createSequentialGroup()
									.addGap(47, 47, 47)
									.addComponent(prodtext, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(bevpanelLayout.createSequentialGroup()
									.addGap(118, 118, 118)
									.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
							.addGap(91, 91, 91)
							.addComponent(addbutton)
							.addContainerGap(395, Short.MAX_VALUE))
					);
					bevpanelLayout.setVerticalGroup(
						bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(bevpanelLayout.createSequentialGroup()
							.addGap(26, 26, 26)
							.addComponent(jLabel1)
							.addContainerGap(19, Short.MAX_VALUE))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bevpanelLayout.createSequentialGroup()
							.addContainerGap(14, Short.MAX_VALUE)
							.addGroup(bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel2)
								.addComponent(jLabel3))
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
							.addGroup(bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(prodtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bevpanelLayout.createSequentialGroup()
							.addContainerGap(25, Short.MAX_VALUE)
							.addComponent(addbutton)
							.addContainerGap())
					);

					javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
					this.setLayout(layout);
					layout.setHorizontalGroup(
						layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(bevpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					);
					layout.setVerticalGroup(
						layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
							.addContainerGap(582, Short.MAX_VALUE)
							.addComponent(bevpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
					);
			  }


    }// </editor-fold>
		public void showall(GRAMMAR gr1)
		{
			gr=gr1;
			gr.TYPE=3;
			gr.productions=new prod[gr.count_vertex];
			for (i=0;i<gr.count_vertex;i++)
			  {
				  gr.productions[i]=new prod();
			  }
			initComponents(1);
		}
		
		public void edgecomboActionPerformed(java.awt.event.ActionEvent evt)
			{
				  ed = (String)combo.getSelectedItem();
			}

	    public void removenullprod(GRAMMAR gr2,String entereg,String symbol)
		    {
				gr=gr2;
				flag=1;
				vert=entereg; sigma=symbol;
				//grnull=gr2.removenull();
				//gp.removenullprod(g2);
				    System.out.print("\n\nVertices are : { ");
					if(gr.count_vertex==0)
					{
							System.out.println("\nEMPTY LANGUAGE\n");
							return;
					}
					for(i=0;i<gr.count_vertex-1;i++)
					{
							//vert=vert+g.vertex[i];
							System.out.print(gr.vertex[i]+",");
					}
					System.out.println(gr.vertex[i]+" }");
					System.out.print("\nSigma Symbols are : { ");
					for(i=0;i<gr.count_sigma-1;i++)
					{
							//sigma=sigma+g.sigma[i]
							System.out.print(gr.sigma[i]+",");
					}
					if(gr.count_sigma>0)
							System.out.println(gr.sigma[i]+" }");
					else
							System.out.println(" }");
					System.out.println("\nStarting vertex is : "+gr.start);
					 if(gr.count_sigma>0)
					  {
							System.out.print("\n  Productions are : ");
							for(i=0;i<gr.count_vertex;i++)
							{
									if(gr.productions[i].no_choices==0)
											continue;
									System.out.print("\n\n  "+gr.vertex[i]+" --> ");
									for(j=0;j<gr.productions[i].no_choices-1;j++)
									{
										   System.out.print(gr.productions[i].choices[j]+" | ");
									}
									System.out.print(gr.productions[i].choices[j]);
							}
							System.out.println("\n");
					  }
					else
							System.out.println("\nEMPTY LANGUAGE\n");

				grnull=gr.removenull();

				if(grnull.count_sigma>0)
					  {
							System.out.print("\n  Productions are : ");
							for(i=0;i<grnull.count_vertex;i++)
							{
									if(grnull.productions[i].no_choices==0)
											continue;
									System.out.print("\n\n  "+grnull.vertex[i]+" --> ");
									for(j=0;j<grnull.productions[i].no_choices-1;j++)
									{
										   System.out.print(grnull.productions[i].choices[j]+" | ");
									}
									System.out.print(grnull.productions[i].choices[j]);
							}
							System.out.println("\n");
					  }
					else
							System.out.println("\nEMPTY LANGUAGE\n");

					grunit=grnull.removeunit();

				if(grunit.count_sigma>0)
					  {
							System.out.print("\n  Productions are : ");
							for(i=0;i<grunit.count_vertex;i++)
							{
									if(grunit.productions[i].no_choices==0)
											continue;
									System.out.print("\n\n  "+grunit.vertex[i]+" --> ");
									for(j=0;j<grunit.productions[i].no_choices-1;j++)
									{
										   System.out.print(grunit.productions[i].choices[j]+" | ");
									}
									System.out.print(grunit.productions[i].choices[j]);
							}
							System.out.println("\n");
					  }
					else
							System.out.println("\nEMPTY LANGUAGE\n");

					gruseless=grunit.removeunit();

				//initComponents(0);
				repaint();
			}

			
	   public void addbuttonActionPerformed(java.awt.event.ActionEvent evt)
		{	
		   ed = (String)combo.getSelectedItem();
		   w1=(char)(ed).charAt(3);
		   
		   System.out.println("string + symbol= "+prodtext.getText()+" "+prodtext.getText().length());
		  
		  // prodtext.setText(" ");
			result=gr.addprod(w1,prodtext.getText());
			if (result==0)
			  {
					System.out.println("result = "+result);
					JOptionPane.showMessageDialog(frm, " Duplicate Production Entered","WARNING",JOptionPane.INFORMATION_MESSAGE, new ImageIcon("images/smile.gif"));
			  }
			else if (result==1)
			  {	
					System.out.println("result = "+result);
					JOptionPane.showMessageDialog(frm, "  Empty String","WARNING",JOptionPane.INFORMATION_MESSAGE, new ImageIcon("images/smile.gif"));
			  }
			else if (result==2)
			  {
					System.out.println("result = "+result);
				    JOptionPane.showMessageDialog(frm, "Invalid Production Entered","WARNING",JOptionPane.INFORMATION_MESSAGE, new ImageIcon("images/smile.gif"));
			  }
			else if (result==3)
			  {
				str[index++]=prodtext.getText();
				w[ind++]=w1;
				//System.out.println("result = "+result);
				count=1;
				repaint();
			  }
		   
		}
		public void paint(Graphics g)
		{
			int h1;
			k=25;h=10;
			super.paint(g);
			if(flag!=1)
			{
				if(count>0)
				{
					for(i=0;i<index;i++)
					{
						g.drawString(w[i]+"--->"+str[i],10,k);
						prodtext.setText("");
						k=k+20;
					}
				}
			}
			else if (flag==1)
			{	
				    //System.out.print("\n\nVertices are : { ");
					g.drawString("Vertices are : "+vert,h,k);
					k=k+20;					
					g.drawString("Sigma Symbols are : "+sigma,h,k);
					k=k+20;
					//System.out.println("\nStarting vertex is : "+g.start);
					g.drawString("Starting vertex is : "+gr.start,h,k);
					
				 if(gr.count_sigma>0)
                  {
						k=k+20;
						g.drawString("  Productions are : ",10,k);
						
						k=k+20;
                        for(i=0;i<gr.count_vertex;i++)
                        {
								h=40;
								g.drawString(gr.vertex[i]+" --> ",h,k);
								h=h+30; 
								if(gr.productions[i].no_choices==0)
										continue;
                                for(j=0;j<gr.productions[i].no_choices-1;j++)
                                {
										
									   g.drawString(gr.productions[i].choices[j]+" | ",h,k);
									   h=h + gr.productions[i].choices[j].length() + 30;
                                      //System.out.print(g.productions[i].choices[j]+" | ");
                                }
								g.drawString(gr.productions[i].choices[j],h,k);
								k=k+20;
                                //System.out.print(gr.productions[i].choices[j],h,k);
                        }
						//g.drawString(g.productions[i].choices[j],20,k);
                        //System.out.println("\n");
				  }
					//NOW AFTER REMOVING NULL PRODUCTIONS
				  if(grnull.count_sigma>0)
                  {
						k=k+50;
						g.drawString("  After Removing Null Productions : ",10,k);
						k=k+20;
                        for(i=0;i<grnull.count_vertex;i++)
                        {
								h=40;
								g.drawString(grnull.vertex[i]+" --> ",h,k);
								h=h+30; 
								if(grnull.productions[i].no_choices==0)
										continue;
                                for(j=0;j<grnull.productions[i].no_choices-1;j++)
                                {
										
									   g.drawString(grnull.productions[i].choices[j]+" | ",h,k);
									   h=h + grnull.productions[i].choices[j].length() + 30;
                                      //System.out.print(g.productions[i].choices[j]+" | ");
                                }
								g.drawString(grnull.productions[i].choices[j],h,k);
								k=k+20;
                                //System.out.print(gr.productions[i].choices[j],h,k);
                        }
						//g.drawString(g.productions[i].choices[j],20,k);
                        //System.out.println("\n");
				  }

				  // after removing unit productions
					k=25;h1=h=h+350;
				   if(grunit.count_sigma>0)
					  {
							
							g.drawString("  After Removing Unit Productions : ",h,k);
							k=k+20;
							for(i=0;i<grunit.count_vertex;i++)
							{
									h=h1;
									g.drawString(grunit.vertex[i]+" --> ",h,k);
									h=h+30; 
									if(grunit.productions[i].no_choices==0)
											continue;
									for(j=0;j<grunit.productions[i].no_choices-1;j++)
									{
											
										   g.drawString(grunit.productions[i].choices[j]+" | ",h,k);
										   h=h + grunit.productions[i].choices[j].length() + 30;
										  //System.out.print(g.productions[i].choices[j]+" | ");
									}
									g.drawString(grunit.productions[i].choices[j],h,k);
									k=k+20;
									//System.out.print(gr.productions[i].choices[j],h,k);
							}
							//g.drawString(g.productions[i].choices[j],20,k);
							//System.out.println("\n");
					  }

					   // after removing useless productions
				
				   if(gruseless.count_sigma>0)
					  {
							k=k+50;
							g.drawString("  After Removing Useless Productions : ",h,k);
							k=k+20;
							for(i=0;i<gruseless.count_vertex;i++)
							{
									h=h1;
									g.drawString(gruseless.vertex[i]+" --> ",h,k);
									h=h+30; 
									if(gruseless.productions[i].no_choices==0)
											continue;
									for(j=0;j<gruseless.productions[i].no_choices-1;j++)
									{
											
										   g.drawString(gruseless.productions[i].choices[j]+" | ",h,k);
										   h=h + gruseless.productions[i].choices[j].length() + 30;
										  //System.out.print(g.productions[i].choices[j]+" | ");
									}
									g.drawString(gruseless.productions[i].choices[j],h,k);
									k=k+20;
									//System.out.print(gr.productions[i].choices[j],h,k);
							}
							//g.drawString(g.productions[i].choices[j],20,k);
							//System.out.println("\n");
					  }

			}
		}
	

		public javax.swing.JButton addbutton;
		public javax.swing.JPanel bevpanel;
		public javax.swing.JComboBox combo;
		public javax.swing.JComboBox jComboBox2;
		public javax.swing.JLabel jLabel1;
		public javax.swing.JLabel jLabel2;
		public javax.swing.JLabel jLabel3;
		public javax.swing.JLabel prodlabel;
		public javax.swing.JTextField prodtext;

    private void initComponents() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
	}


class pdapanel extends javax.swing.JPanel 
{
	
	public pdapanel()
    {
	    initComponents();
	}

	 @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    public void initComponents()
		{
			 bevpanel = new javax.swing.JPanel();
			setBackground(new java.awt.Color(255, 255, 204));
			setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 0), 3));
			
			  bevpanel.setBackground(new java.awt.Color(153, 255, 204));
			bevpanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout bevpanelLayout = new javax.swing.GroupLayout(bevpanel);
        bevpanel.setLayout(bevpanelLayout);
        bevpanelLayout.setHorizontalGroup(
            bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 818, Short.MAX_VALUE)
        );
        bevpanelLayout.setVerticalGroup(
            bevpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bevpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(579, Short.MAX_VALUE)
                .addComponent(bevpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>
	public javax.swing.JPanel bevpanel;
}

